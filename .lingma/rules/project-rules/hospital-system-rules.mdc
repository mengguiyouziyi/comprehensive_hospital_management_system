---
description: "医院管理系统专用规则，确保符合医疗行业标准和数据安全要求"
globs: "**/*"
alwaysApply: true
---
# 医院管理系统开发规则

## 医疗行业特殊要求

### 数据安全和隐私保护
1. 所有患者信息必须进行加密存储
2. 遵循HIPAA和GDPR等医疗数据保护法规
3. 实施严格的访问控制和审计日志
4. 敏感数据在传输过程中必须使用HTTPS加密

### 系统可靠性
1. 系统必须保证99.9%以上的可用性
2. 实施全面的错误处理和恢复机制
3. 关键操作必须有确认和回滚机制
4. 定期进行系统备份和恢复测试

### 合规性要求
1. 遵循医疗设备相关法规
2. 符合医院信息系统标准
3. 实施严格的变更管理流程
4. 保持完整的系统验证文档

## 技术规范

### 前端技术栈
- React 18 + Hooks
- Ant Design 组件库
- Redux Toolkit 状态管理
- React Router 6 路由管理

### 后端技术栈
- Node.js (NestJS) 或 Java (Spring Boot)
- MySQL 8.0+ 关系型数据库
- Redis 缓存
- MongoDB 文档数据库

### 移动端技术栈
- React Native
- 支持iOS和Android平台

## 代码质量要求

### 命名规范
1. 使用有意义的变量和函数名
2. 遵循驼峰命名法（camelCase）
3. 常量使用大写字母和下划线（UPPER_CASE）
4. 组件名使用帕斯卡命名法（PascalCase）

### 注释规范
1. 所有公共函数和类必须有详细注释
2. 复杂业务逻辑必须有注释说明
3. 使用JSDoc或JavaDoc格式
4. 及时更新过时的注释

### 测试要求
1. 单元测试覆盖率不低于80%
2. 关键业务流程必须有集成测试
3. 定期进行性能测试
4. 安全测试必须包含在测试流程中

## 提交规范

### 提交信息格式
使用 conventional commits 格式：
```
<type>[optional scope]: <description>

[optional body]

[optional footer(s)]
```

### 提交类型
- feat: 新功能
- fix: 修复bug
- docs: 文档更新
- style: 代码格式调整
- refactor: 代码重构
- test: 测试相关
- chore: 构建过程或辅助工具的变动

### Emoji指南
- 🎉 `:tada:` 新功能
- 🐛 `:bug:` Bug修复
- 📝 `:memo:` 文档更新
- 🎨 `:art:` 样式更改
- ♻️ `:recycle:` 代码重构
- ✅ `:white_check_mark:` 测试相关
- 🚀 `:rocket:` 部署相关