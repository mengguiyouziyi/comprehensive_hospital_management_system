name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 后端测试
  backend-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: comprehensive_hospital_management_system/backend/user-service/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd comprehensive_hospital_management_system/backend/user-service
        npm ci
    
    - name: Run backend tests
      run: |
        cd comprehensive_hospital_management_system/backend/user-service
        npm run test:coverage
    
    - name: Upload backend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./comprehensive_hospital_management_system/backend/user-service/coverage/lcov.info
        flags: backend

  # 前端测试
  frontend-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: comprehensive_hospital_management_system/frontend/web/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd comprehensive_hospital_management_system/frontend/web
        npm ci
    
    - name: Run frontend tests
      run: |
        cd comprehensive_hospital_management_system/frontend/web
        npm test -- --coverage --watchAll=false
    
    - name: Upload frontend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./comprehensive_hospital_management_system/frontend/web/coverage/lcov.info
        flags: frontend

  # 构建Docker镜像
  build:
    needs: [backend-test, frontend-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push backend
      uses: docker/build-push-action@v4
      with:
        context: ./comprehensive_hospital_management_system/backend/user-service
        file: ./comprehensive_hospital_management_system/backend/user-service/Dockerfile
        push: true
        tags: hospital/user-service:latest
    
    - name: Build and push frontend
      uses: docker/build-push-action@v4
      with:
        context: ./comprehensive_hospital_management_system/frontend/web
        file: ./comprehensive_hospital_management_system/frontend/web/Dockerfile
        push: true
        tags: hospital/web:latest

  # 部署到生产环境
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to production
      run: |
        echo "Deploying to production server..."
        # 这里可以添加部署到生产环境的具体命令
        # 例如使用SSH连接到服务器并执行部署脚本